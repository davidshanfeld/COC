<analysis>
The trajectory outlines the transition of the Coastal Oak Capital application from an MVP to a fully operational system with real-time analytics. The initial AI engineer successfully implemented the Excel Reports feature, replacing mocked data with live data from external sources (simulated Treasury, BLS, FRED). This involved creating new backend API endpoints (, , , ) in  and extensively modifying  on the frontend to consume these, display real-time financial metrics, and enable GP-specific Excel exports. Debugging efforts, such as resolving a  initialization error, ensured functionality. After this work, the AI engineer requested further input. The user then provided a detailed  object in Chat Message 5, outlining the next development phase: Data lineage and auditability. This new sprint specifies comprehensive backend changes for snapshotting and lineage, MongoDB schema updates, new frontend components and interactions, and defines the acceptance criteria and an other top priority tweak for a snapshot selector. This  object now forms the explicit requests for the ongoing development.
</analysis>

<product_requirements>
The Coastal Oak Capital application is an investment prospectus for a distressed real estate fund requiring high security (dual-password LP/GP login, legal disclaimer, copy/paste/right-click disabling) and real-time data. The previous major feature integrated institutional-level Excel spreadsheets, displaying trackable, formatted data from real-time external sources (Treasury, BLS, FRED) with end-to-end verification for backend JSON, React grid rendering, LP view-only access, and GP Excel downloads.

The *current* requirement is Data lineage and auditability. This entails:
-   **Backend**: New  endpoints (POST, GET) for GP to create, list, and fetch snapshots.  modified for , , , and / queries.  supports . MongoDB  collection and  schema defined.
-   **Frontend**: New , ,  components. Displaying last updated time/snapshot ID, refresh button, and clickable lineage modal.
-   **Export**: Filename .
-   **Tweak**: Thread  through UI/export, and display snapshot selector dropdown.
</product_requirements>

<key_technical_concepts>
-   **Full-stack Architecture**: React.js (frontend), FastAPI (backend), MongoDB (database).
-   **Authentication & Authorization**: JWT-based dual-password (LP/GP) with role-based access.
-   **External Data Integration**: Simulated fetching from Treasury (FRED), BLS for live market data.
-   **Data Lineage & Auditability**: Snapshotting of data, versioning, and explicit citation tracking.
-   **UI/UX**: Shadcn UI, custom CSS, client-side interaction disabling.
</key_technical_concepts>

<code_architecture>


-   ****
    -   **Summary**: The core FastAPI application handling backend logic, MongoDB connection, and API endpoints.
    -   **Changes Made**: Significant additions for the Excel Analytics feature. Introduced  for fetching and caching data. Added  with four API endpoints: , , , , providing live, dynamic data.
-   ****
    -   **Summary**: The central component displaying various fund-related views.
    -   **Changes Made**: Heavily refactored for Excel Reports. Introduced state for  and . Implemented  hooks for fetching live data. Revamped Excel Reports View to dynamically render KPIs and a deal grid. Updated  to call . Helper functions  and  were moved to the top to fix initialization errors.
-   ****
    -   **Summary**: A new component introduced in the UI to encapsulate the layout and high-level components of the Excel Analytics view. It renders statistics ( component), a Deal Grid (using ), and Market Signals.
    -   **Changes Made**: This file was recently provided and renders placeholders using  props to display KPIs and citations, along with a  button.
-   ****
    -   **Summary**: Lists Python dependencies for the backend.
    -   **Changes Made**: Confirmed  library presence.
-   ****
    -   **Summary**: Global CSS styles.
    -   **Changes Made**: Contains styling rules for the teal gradient theme and security features. Recently updated with global CSS variables for consistent branding.
-   ****
    -   **Summary**: Tailwind CSS configuration.
    -   **Changes Made**: Recently updated with  custom colors, , , , and  to align with the UI theme.
-   ****
    -   **Summary**: Defines the application's chart theme.
    -   **Changes Made**: Content for this file was recently provided, defining stroke, grid, series colors, and width to align with brand charting guidelines.
</code_architecture>

<pending_tasks>
The previous phase completed all explicit tasks. The new pending tasks from Chat Message 5's  object are:
-   Implement new backend API endpoints for snapshots (,  ).
-   Modify existing Excel API endpoints (, ) for lineage, snapshot IDs, and refresh.
-   Implement MongoDB schema for  and .
-   Develop new frontend components: , , .
-   Integrate these UI components for display, refresh, and lineage modals.
-   Update export for snapshot-backed exports with specific filename.
-   Implement snapshot selector dropdown.
</pending_tasks>

<current_work>
Immediately prior to this summary, the AI engineer successfully completed the Excel Analytics, end-to-end verification and data freshness system for the Coastal Oak Capital application. This involved a complete transformation from a mocked Excel reports view to one powered by live, external data. Backend implementation included new API endpoints (, , , ) in  for fetching, caching, and KPI calculation from simulated external sources (Treasury, BLS, FRED). Frontend integration saw  updated to fetch and display this real-time data, utilizing state variables and  hooks, and rebuilding the Excel Reports View section for dynamic KPI and deals grid rendering. The  function was modified for GP-specific live Excel data downloads via . A critical JavaScript error Cannot access formatCurrency before initialization was fixed by relocating helper functions in . The feature was verified end-to-end through automated screenshot tests, confirming live data display, a professional deal grid, and visible GP export functionality. The application's UI theme, Tailwind config, global CSS, and chart theme were also updated with specific brand colors and typography. The  component was introduced as a structural element for the Excel Analytics view. The system is now fully operational with live, institutional-grade Excel analytics.
</current_work>

<optional_next_step>
The next step is to initiate the Data lineage and auditability sprint by implementing the new backend snapshot APIs and modifying existing endpoints as detailed in the user's explicit request.
</optional_next_step>
